=====================
General instructions
=====================

CURP I/O
========

The CURP program is able to handle either ASCII or NetCDF data files.
The NetCDF file is a device independent binary file. Conversely, 
ASCII files can be sometimes large. For convenience, the CURP
program accepts compressed (gzipped) ASCII files with the .gz extension. 

Please visit `NetCDF site`_ about NetCDF information.

.. _NetCDF site: http://www.unidata.ucar.edu/software/netcdf/

File name specification in the configuration files
==================================================

To run CURP programs sometimes configuration file/files need to be edited
to set up the required parameters and keywords. To specify input/output files in
a configuration file, either abosolute or relative path to the I/O file
can be indicated in the configuration file. Here, note that the relative path
must be the path to the I/O file from the directory in which the configuration
file exists.

Compatibility with external MD programs
=======================================

To analyze the physical properties of proteins, CURP extracts
atomic coordinates and velocities from MD trajectory files 
generated by an external MD program package. At the moment,
CURP is only compatible with the trajectory files in the Amber format.

Editing Configuration files
============================

*  A Configuration file consists of multiple sections each of which contains parameters.
*  A section name is surrounded by  ``[`` and ``]``.
*  Parameters are given by ``keyword = value``.
*  Comments are given by the lines starting  with ``#`` or ``;``.
   You may also begin comments in the middle of the line.

In the CURP configuration file, there are six types of keywords: Int, Float, Bool, File, List, and Choice. For the Choice type, you choose one of the values separated by '|', where the first option of them is set as the default value if not specified explicitly.


Getting online help 
====================
The list of possible parameters is shown on the screen by entering `curp` with 
`--help` option as follows:

.. code-block:: bash

   $ curp compute --help

